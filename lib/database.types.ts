// This file is generated by Supabase CLI
// You can generate this file by running: supabase gen types typescript --project-id YOUR_PROJECT_ID --schema public > lib/database.types.ts

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string;
          email: string;
          full_name: string | null;
          phone: string | null;
          avatar_url: string | null;
          trust_score: number;
          total_transactions: number;
          member_since: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id: string;
          email: string;
          full_name?: string | null;
          phone?: string | null;
          avatar_url?: string | null;
          trust_score?: number;
          total_transactions?: number;
          member_since?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          email?: string;
          full_name?: string | null;
          phone?: string | null;
          avatar_url?: string | null;
          trust_score?: number;
          total_transactions?: number;
          updated_at?: string;
        };
      };
      transactions: {
        Row: {
          id: string;
          from_user_id: string;
          to_user_id: string;
          amount: number;
          description: string;
          type: 'debt_created' | 'debt_settled' | 'payment_made' | 'payment_received';
          status: 'pending' | 'completed' | 'cancelled';
          group_id: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          from_user_id: string;
          to_user_id: string;
          amount: number;
          description: string;
          type: 'debt_created' | 'debt_settled' | 'payment_made' | 'payment_received';
          status?: 'pending' | 'completed' | 'cancelled';
          group_id?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          amount?: number;
          description?: string;
          type?: 'debt_created' | 'debt_settled' | 'payment_made' | 'payment_received';
          status?: 'pending' | 'completed' | 'cancelled';
          updated_at?: string;
        };
      };
      debts: {
        Row: {
          id: string;
          creditor_id: string;
          debtor_id: string;
          youwillreceive: number;
          youwillgive: number;
          description: string | null;
          group_id: string | null;
          is_settled: boolean;
          pay_date: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          creditor_id: string;
          debtor_id: string;
          youwillreceive?: number;
          youwillgive?: number;
          description?: string | null;
          group_id?: string | null;
          is_settled?: boolean;
          pay_date?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          creditor_id?: string;
          debtor_id?: string;
          youwillreceive?: number;
          youwillgive?: number;
          description?: string | null;
          group_id?: string | null;
          is_settled?: boolean;
          pay_date?: string | null;
          updated_at?: string;
        };
      };
      groups: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          total_amount: number;
          created_by: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          total_amount?: number;
          created_by: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          total_amount?: number;
          updated_at?: string;
        };
      };
      group_members: {
        Row: {
          id: string;
          group_id: string;
          user_id: string;
          amount_owed: number;
          is_paid: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          group_id: string;
          user_id: string;
          amount_owed?: number;
          is_paid?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          amount_owed?: number;
          is_paid?: boolean;
          updated_at?: string;
        };
      };
      group_invitations: {
        Row: {
          id: string;
          group_id: string;
          invited_by: string;
          invited_user_email: string;
          status: 'pending' | 'accepted' | 'declined';
          expires_at: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          group_id: string;
          invited_by: string;
          invited_user_email: string;
          status?: 'pending' | 'accepted' | 'declined';
          expires_at: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          status?: 'pending' | 'accepted' | 'declined';
        };
      };
      notifications: {
        Row: {
          id: string;
          user_id: string;
          title: string;
          message: string;
          type: 'debt_created' | 'payment_received' | 'payment_reminder' | 'group_activity' | 'friend_request';
          data: Record<string, any> | null;
          read: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          title: string;
          message: string;
          type: 'debt_created' | 'payment_received' | 'payment_reminder' | 'group_activity' | 'friend_request';
          data?: Record<string, any> | null;
          read?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          read?: boolean;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      [_ in never]: never;
    };
  };
}